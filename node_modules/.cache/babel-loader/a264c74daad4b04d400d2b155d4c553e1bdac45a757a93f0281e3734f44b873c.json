{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adem Macic\\\\Desktop\\\\movie-app(valens task)\\\\src\\\\components\\\\PlotDetails.js\",\n  _s = $RefreshSig$();\nimport { useParams } from \"react-router-dom\";\nimport { useContext, useState } from \"react\";\nimport MoviesContext from \"../store/movies-context\";\nimport ShowsContext from \"../store/shows-context\";\nimport classes from \"./PlotDetails.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://www.omdbapi.com/?apikey=f51ddc1a\";\nconst PlotDetails = () => {\n  _s();\n  const params = useParams();\n  /*const moviesCtx = useContext(MoviesContext);\r\n  const showsCtx = useContext(ShowsContext);\r\n    //console.log(moviesCtx.top10Movies);\r\n  console.log(moviesCtx.searchedMovies);\r\n  /*console.log(moviesCtx.top10Movies);\r\n  console.log(moviesCtx.top10Movies);\r\n    const allShows = [\r\n    ...moviesCtx.top10Movies,\r\n    ...moviesCtx.searchedMovies,\r\n    ...showsCtx.top10Shows,\r\n    ...showsCtx.searchedShows,\r\n  ];\r\n  console.log(allShows);\r\n  console.log (params.imdbID);\r\n  const chosenShow = allShows.find(\r\n    (showObject) => showObject.imdbID === params.imdbID\r\n  );*/\n  //let [chosenShowPoster, chosenShowTitle, chosenShowPlot] = ['','',''];\n  const [chosenShowPoster, setChosenShowPoster] = useState('');\n  const [chosenShowTitle, setChosenShowTitle] = useState('');\n  const [chosenShowPlot, setChosenShowPlot] = useState('');\n  fetch(`${API_URL}&i=${params.imdbID}&plot=full`).then(response => {\n    if (!response.ok) {\n      throw new Error(\"NE VALJA BRUDA\");\n    } else {\n      return response.json();\n    }\n  }).then(data => {\n    console.log(data);\n    if (data) {\n      console.log('uslo u datuuu');\n      setChosenShowPoster(data.Poster);\n      setChosenShowTitle(data.Title);\n      setChosenShowPlot(data.Plot);\n      const chosenShowTitle = data.Title;\n      const chosenShowPlot = data.Plot;\n    }\n  }).catch(error => {\n    console.error(error);\n  });\n  console.log(chosenShowTitle);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.image,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: chosenShowPoster,\n      alt: chosenShowTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: chosenShowTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Movie overview:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: chosenShowPlot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(PlotDetails, \"xRIqZ6+XwqyPfRD+YSWqC4LnG80=\", false, function () {\n  return [useParams];\n});\n_c = PlotDetails;\nexport default PlotDetails;\nvar _c;\n$RefreshReg$(_c, \"PlotDetails\");","map":{"version":3,"names":["useParams","useContext","useState","MoviesContext","ShowsContext","classes","API_URL","PlotDetails","params","chosenShowPoster","setChosenShowPoster","chosenShowTitle","setChosenShowTitle","chosenShowPlot","setChosenShowPlot","fetch","imdbID","then","response","ok","Error","json","data","console","log","Poster","Title","Plot","catch","error","image"],"sources":["C:/Users/Adem Macic/Desktop/movie-app(valens task)/src/components/PlotDetails.js"],"sourcesContent":["import { useParams } from \"react-router-dom\";\r\nimport { useContext, useState } from \"react\";\r\nimport MoviesContext from \"../store/movies-context\";\r\nimport ShowsContext from \"../store/shows-context\";\r\nimport classes from \"./PlotDetails.module.css\";\r\nconst API_URL = \"http://www.omdbapi.com/?apikey=f51ddc1a\";\r\n\r\nconst PlotDetails = () => {\r\n  const params = useParams();\r\n  /*const moviesCtx = useContext(MoviesContext);\r\n  const showsCtx = useContext(ShowsContext);\r\n\r\n  //console.log(moviesCtx.top10Movies);\r\n  console.log(moviesCtx.searchedMovies);\r\n  /*console.log(moviesCtx.top10Movies);\r\n  console.log(moviesCtx.top10Movies);\r\n\r\n  const allShows = [\r\n    ...moviesCtx.top10Movies,\r\n    ...moviesCtx.searchedMovies,\r\n    ...showsCtx.top10Shows,\r\n    ...showsCtx.searchedShows,\r\n  ];\r\nconsole.log(allShows);\r\nconsole.log (params.imdbID);\r\n  const chosenShow = allShows.find(\r\n    (showObject) => showObject.imdbID === params.imdbID\r\n  );*/\r\n//let [chosenShowPoster, chosenShowTitle, chosenShowPlot] = ['','',''];\r\n  const [chosenShowPoster, setChosenShowPoster] = useState ('');\r\n  const [chosenShowTitle, setChosenShowTitle] = useState ('');\r\n  const [chosenShowPlot, setChosenShowPlot] = useState ('');\r\n\r\n  fetch (`${API_URL}&i=${params.imdbID}&plot=full`).then((response) => {\r\n    if (!response.ok) {\r\n      throw new Error(\"NE VALJA BRUDA\");\r\n    } else {\r\n      return response.json();\r\n    }\r\n  })\r\n  .then((data) => {\r\n    console.log(data);\r\n    if (data) {\r\n      console.log('uslo u datuuu');\r\n      setChosenShowPoster (data.Poster);\r\n      setChosenShowTitle (data.Title);\r\n      setChosenShowPlot (data.Plot);\r\n      \r\n      const chosenShowTitle = data.Title;\r\n      const chosenShowPlot = data.Plot;\r\n    } \r\n  })\r\n  .catch((error) => {\r\n    console.error(error);\r\n  });\r\n    \r\n  console.log(chosenShowTitle);\r\n  \r\n  return (\r\n    <div className={classes.image}>\r\n      <img src={chosenShowPoster} alt={chosenShowTitle} />\r\n      <h3>{chosenShowTitle}</h3>\r\n      <p>Movie overview:</p>\r\n      <p>{chosenShowPlot}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlotDetails;\r\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAC5C,OAAOC,aAAa,MAAM,yBAAyB;AACnD,OAAOC,YAAY,MAAM,wBAAwB;AACjD,OAAOC,OAAO,MAAM,0BAA0B;AAAC;AAC/C,MAAMC,OAAO,GAAG,yCAAyC;AAEzD,MAAMC,WAAW,GAAG,MAAM;EAAA;EACxB,MAAMC,MAAM,GAAGR,SAAS,EAAE;EAC1B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAGA;EACE,MAAM,CAACS,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGR,QAAQ,CAAE,EAAE,CAAC;EAC7D,MAAM,CAACS,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAE,EAAE,CAAC;EAC3D,MAAM,CAACW,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAE,EAAE,CAAC;EAEzDa,KAAK,CAAG,GAAET,OAAQ,MAAKE,MAAM,CAACQ,MAAO,YAAW,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;IACnE,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,gBAAgB,CAAC;IACnC,CAAC,MAAM;MACL,OAAOF,QAAQ,CAACG,IAAI,EAAE;IACxB;EACF,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,IAAK;IACdC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjB,IAAIA,IAAI,EAAE;MACRC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;MAC5Bd,mBAAmB,CAAEY,IAAI,CAACG,MAAM,CAAC;MACjCb,kBAAkB,CAAEU,IAAI,CAACI,KAAK,CAAC;MAC/BZ,iBAAiB,CAAEQ,IAAI,CAACK,IAAI,CAAC;MAE7B,MAAMhB,eAAe,GAAGW,IAAI,CAACI,KAAK;MAClC,MAAMb,cAAc,GAAGS,IAAI,CAACK,IAAI;IAClC;EACF,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;IAChBN,OAAO,CAACM,KAAK,CAACA,KAAK,CAAC;EACtB,CAAC,CAAC;EAEFN,OAAO,CAACC,GAAG,CAACb,eAAe,CAAC;EAE5B,oBACE;IAAK,SAAS,EAAEN,OAAO,CAACyB,KAAM;IAAA,wBAC5B;MAAK,GAAG,EAAErB,gBAAiB;MAAC,GAAG,EAAEE;IAAgB;MAAA;MAAA;MAAA;IAAA,QAAG,eACpD;MAAA,UAAKA;IAAe;MAAA;MAAA;MAAA;IAAA,QAAM,eAC1B;MAAA,UAAG;IAAe;MAAA;MAAA;MAAA;IAAA,QAAI,eACtB;MAAA,UAAIE;IAAc;MAAA;MAAA;MAAA;IAAA,QAAK;EAAA;IAAA;IAAA;IAAA;EAAA,QACnB;AAEV,CAAC;AAAC,GA3DIN,WAAW;EAAA,QACAP,SAAS;AAAA;AAAA,KADpBO,WAAW;AA6DjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}